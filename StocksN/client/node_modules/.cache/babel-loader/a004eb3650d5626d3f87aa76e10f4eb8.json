{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\jordo\\\\Google Drive\\\\GitHub\\\\Project-3\\\\StocksN\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jordo\\\\Google Drive\\\\GitHub\\\\Project-3\\\\StocksN\\\\client\\\\src\\\\Components\\\\StockWatch\\\\index.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Title from '../TitleComponent/index.js';\nimport Chart from 'chart.js';\nimport useScript from './useScript';\nimport moment from 'moment';\n\nfunction StockWatch(props) {\n  console.log(props); // const [loaded, error] = useScript(\n  //     './Chart-chart-financial.js'\n  //   );\n  //   useEffect(() => {\n  // \tif (!loaded) return\n  // }, [loaded, error])\n  // Hook\n  //   let cachedScripts = [];\n  //   function useScript(src) {\n  // \t// Keeping track of script loaded and error state\n  // \tconst [state, setState] = useState({\n  // \t  loaded: false,\n  // \t  error: false\n  // \t});\n  // \tuseEffect(\n  // \t  () => {\n  // \t\t// If cachedScripts array already includes src that means another instance ...\n  // \t\t// ... of this hook already loaded this script, so no need to load again.\n  // \t\tif (cachedScripts.includes(src)) {\n  // \t\t  setState({\n  // \t\t\tloaded: true,\n  // \t\t\terror: false\n  // \t\t  });\n  // \t\t} else {\n  // \t\t  cachedScripts.push(src);\n  // \t\t  // Create script\n  // \t\t  let script = document.createElement('script');\n  // \t\t  script.src = src;\n  // \t\t  script.async = true;\n  // \t\t  // Script event listener callbacks for load and error\n  // \t\t  const onScriptLoad = () => {\n  // \t\t\tsetState({\n  // \t\t\t  loaded: true,\n  // \t\t\t  error: false\n  // \t\t\t});\n  // \t\t  };\n  // \t\t  const onScriptError = () => {\n  // \t\t\t// Remove from cachedScripts we can try loading again\n  // \t\t\tconst index = cachedScripts.indexOf(src);\n  // \t\t\tif (index >= 0) cachedScripts.splice(index, 1);\n  // \t\t\tscript.remove();\n  // \t\t\tsetState({\n  // \t\t\t  loaded: true,\n  // \t\t\t  error: true\n  // \t\t\t});\n  // \t\t  };\n  // \t\t  script.addEventListener('load', onScriptLoad);\n  // \t\t  script.addEventListener('error', onScriptError);\n  // \t\t  // Add script to document body\n  // \t\t  document.head.appendChild(script);\n  // \t\t  // Remove event listeners on cleanup\n  // \t\t  return () => {\n  // \t\t\tscript.removeEventListener('load', onScriptLoad);\n  // \t\t\tscript.removeEventListener('error', onScriptError);\n  // \t\t  };\n  // \t\t}\n  // \t  },\n  // \t  [src] // Only re-run effect if script src changes\n  // \t);\n  // \treturn [state.loaded, state.error];\n  //   }\n  // [] = useState({\n  // })\n  // var dataDate = Chart.()\n\n  var chartConfig = {\n    type: 'candlestick',\n    data: {\n      datasets: [{\n        label: 'CHRT - Chart.js Corporation',\n        data: getData(initialDateStr, barCount)\n      }]\n    },\n    options: {\n      scales: {\n        x: {\n          afterBuildTicks: function afterBuildTicks(scale) {\n            var majorUnit = scale._majorUnit;\n            var ticks = scale.ticks;\n            var firstTick = ticks[0];\n            var i, ilen, val, tick, currMajor, lastMajor;\n            val = moment(ticks[0].value);\n\n            if (majorUnit === 'minute' && val.second === 0 || majorUnit === 'hour' && val.minute === 0 || majorUnit === 'day' && val.hour === 9 || majorUnit === 'month' && val.day <= 3 && val.weekday === 1 || majorUnit === 'year' && val.month === 0) {\n              firstTick.major = true;\n            } else {\n              firstTick.major = false;\n            }\n\n            lastMajor = val.get(majorUnit);\n\n            for (i = 1, ilen = ticks.length; i < ilen; i++) {\n              tick = ticks[i];\n              val = moment(tick.value);\n              currMajor = val.get(majorUnit);\n              tick.major = currMajor !== lastMajor;\n              lastMajor = currMajor;\n            }\n\n            return ticks;\n          }\n        }\n      }\n    }\n  };\n  var chartContainer = useRef(null);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      chartInstance = _useState2[0],\n      setChartInstance = _useState2[1];\n\n  useEffect(function () {\n    if (chartContainer && chartContainer.current) {\n      var newChartInstance = new Chart(chartContainer.current, chartConfig);\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer]);\n\n  var updateDataset = function updateDataset(datasetIndex, newData) {\n    chartInstance.data.datasets[datasetIndex].data = newData;\n    chartInstance.update();\n  };\n\n  var onButtonClick = function onButtonClick() {\n    var data = [1, 2, 3, 4, 5, 6];\n    updateDataset(0, data);\n  };\n\n  var barCount = 60;\n  var initialDateStr = '01 Apr 2017 00:00 Z';\n  var ctx = document.getElementById('chart').getContext('2d');\n  ctx.canvas.width = 240;\n  ctx.canvas.height = 240;\n\n  var getRandomInt = function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  };\n\n  function getData(dateStr, count) {\n    var dateFormat = 'MMMM DD YYYY';\n    var date = moment(\"\".concat(dateStr), dateFormat);\n    var data = [randomBar(date, 30)];\n\n    while (data.length < count) {\n      date = date.plus({\n        days: 1\n      });\n\n      if (date.weekday <= 5) {\n        data.push(randomBar(date, data[data.length - 1].c));\n      }\n    }\n\n    return data;\n  }\n\n  function randomNumber(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n\n  function randomBar(date, lastClose) {\n    var open = randomNumber(lastClose * 0.95, lastClose * 1.05).toFixed(2);\n    var close = randomNumber(open * 0.95, open * 1.05).toFixed(2);\n    var high = randomNumber(Math.max(open, close), Math.max(open, close) * 1.1).toFixed(2);\n    var low = randomNumber(Math.min(open, close) * 0.9, Math.min(open, close)).toFixed(2);\n    return {\n      t: date.valueOf(),\n      o: open,\n      h: high,\n      l: low,\n      c: close\n    };\n  } // var update = function() {\n  // \tvar dataset = chart.config.data.datasets[0];\n  // \t// candlestick vs ohlc\n  // \tvar type = document.getElementById('type').value;\n  // \tdataset.type = type;\n  // \t// linear vs log\n  // \tvar scaleType = document.getElementById('scale-type').value;\n  // \tchart.config.options.scales.y.type = scaleType;\n  // \t// color\n  // \tvar colorScheme = document.getElementById('color-scheme').value;\n  // \tif (colorScheme === 'neon') {\n  // \t\tdataset.color = {\n  // \t\t\tup: '#01ff01',\n  // \t\t\tdown: '#fe0000',\n  // \t\t\tunchanged: '#999',\n  // \t\t};\n  // \t} else {\n  // \t\tdelete dataset.color;\n  // \t}\n  // \t// border\n  // \tvar border = document.getElementById('border').value;\n  // \tvar defaultOpts = Chart.defaults.elements[type];\n  // \tif (border === 'true') {\n  // \t\tdataset.borderColor = defaultOpts.borderColor;\n  // \t} else {\n  // \t\tdataset.borderColor = {\n  // \t\t\tup: defaultOpts.color.up,\n  // \t\t\tdown: defaultOpts.color.down,\n  // \t\t\tunchanged: defaultOpts.color.up\n  // \t\t};\n  // \t}\n  // \tchart.update();\n  // };\n  //   update();\n  //   document.getElementById('randomizeData').addEventListener('click', function() {\n  //     chart.data.datasets.forEach(function(dataset) {\n  //       dataset.data = getData(initialDateStr, barCount);\n  //     });\n  //     update();\n  //   })\n  // const theme = useTheme();\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 2\n    }\n  }, \"Stocks to watch:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: chartContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }\n  })));\n}\n\n;\nexport default StockWatch;","map":{"version":3,"sources":["C:/Users/jordo/Google Drive/GitHub/Project-3/StocksN/client/src/Components/StockWatch/index.js"],"names":["React","useState","useEffect","useRef","Title","Chart","useScript","moment","StockWatch","props","console","log","chartConfig","type","data","datasets","label","getData","initialDateStr","barCount","options","scales","x","afterBuildTicks","scale","majorUnit","_majorUnit","ticks","firstTick","i","ilen","val","tick","currMajor","lastMajor","value","second","minute","hour","day","weekday","month","major","get","length","chartContainer","chartInstance","setChartInstance","current","newChartInstance","updateDataset","datasetIndex","newData","update","onButtonClick","ctx","document","getElementById","getContext","canvas","width","height","getRandomInt","max","Math","floor","random","dateStr","count","dateFormat","date","randomBar","plus","days","push","c","randomNumber","min","lastClose","open","toFixed","close","high","low","t","valueOf","o","h","l"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Title from '../TitleComponent/index.js';\nimport Chart from 'chart.js';\nimport useScript from './useScript';\nimport moment from 'moment';\n\nfunction StockWatch(props){\n\nconsole.log(props)\n\n// const [loaded, error] = useScript(\n//     './Chart-chart-financial.js'\n//   );\n\n//   useEffect(() => {\n// \tif (!loaded) return\n// }, [loaded, error])\n\n  \n  \n  // Hook\n//   let cachedScripts = [];\n//   function useScript(src) {\n// \t// Keeping track of script loaded and error state\n// \tconst [state, setState] = useState({\n// \t  loaded: false,\n// \t  error: false\n// \t});\n  \n// \tuseEffect(\n// \t  () => {\n// \t\t// If cachedScripts array already includes src that means another instance ...\n// \t\t// ... of this hook already loaded this script, so no need to load again.\n// \t\tif (cachedScripts.includes(src)) {\n// \t\t  setState({\n// \t\t\tloaded: true,\n// \t\t\terror: false\n// \t\t  });\n// \t\t} else {\n// \t\t  cachedScripts.push(src);\n  \n// \t\t  // Create script\n// \t\t  let script = document.createElement('script');\n// \t\t  script.src = src;\n// \t\t  script.async = true;\n  \n// \t\t  // Script event listener callbacks for load and error\n// \t\t  const onScriptLoad = () => {\n// \t\t\tsetState({\n// \t\t\t  loaded: true,\n// \t\t\t  error: false\n// \t\t\t});\n// \t\t  };\n  \n// \t\t  const onScriptError = () => {\n// \t\t\t// Remove from cachedScripts we can try loading again\n// \t\t\tconst index = cachedScripts.indexOf(src);\n// \t\t\tif (index >= 0) cachedScripts.splice(index, 1);\n// \t\t\tscript.remove();\n  \n// \t\t\tsetState({\n// \t\t\t  loaded: true,\n// \t\t\t  error: true\n// \t\t\t});\n// \t\t  };\n  \n// \t\t  script.addEventListener('load', onScriptLoad);\n// \t\t  script.addEventListener('error', onScriptError);\n  \n// \t\t  // Add script to document body\n// \t\t  document.head.appendChild(script);\n  \n// \t\t  // Remove event listeners on cleanup\n// \t\t  return () => {\n// \t\t\tscript.removeEventListener('load', onScriptLoad);\n// \t\t\tscript.removeEventListener('error', onScriptError);\n// \t\t  };\n// \t\t}\n// \t  },\n// \t  [src] // Only re-run effect if script src changes\n// \t);\n  \n// \treturn [state.loaded, state.error];\n//   }\n\n// [] = useState({\n\n// })\n// var dataDate = Chart.()\n\n\nconst chartConfig = {\n\ttype: 'candlestick',\n\tdata: {\n\t\tdatasets: [{\n\t\t\tlabel: 'CHRT - Chart.js Corporation',\n\t\t\tdata: getData(initialDateStr, barCount)\n\t\t}]\n\t},\n\toptions: {\n\t\tscales: {\n\t\t\tx: {\n\t\t\t\tafterBuildTicks: function(scale) {\n\t\t\t\t\tconst majorUnit = scale._majorUnit;\n\t\t\t\t\tconst ticks = scale.ticks;\n\t\t\t\t\tconst firstTick = ticks[0];\n\t\t\t\t\tlet i, ilen, val, tick, currMajor, lastMajor;\n\n\t\t\t\t\tval = moment(ticks[0].value);\n\t\t\t\t\tif ((majorUnit === 'minute' && val.second === 0)\n\t\t\t\t\t\t\t|| (majorUnit === 'hour' && val.minute === 0)\n\t\t\t\t\t\t\t|| (majorUnit === 'day' && val.hour === 9)\n\t\t\t\t\t\t\t|| (majorUnit === 'month' && val.day <= 3 && val.weekday === 1)\n\t\t\t\t\t\t\t|| (majorUnit === 'year' && val.month === 0)) {\n\t\t\t\t\t\tfirstTick.major = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfirstTick.major = false;\n\t\t\t\t\t}\n\t\t\t\t\tlastMajor = val.get(majorUnit);\n\n\t\t\t\t\tfor (i = 1, ilen = ticks.length; i < ilen; i++) {\n\t\t\t\t\t\ttick = ticks[i];\n\t\t\t\t\t\tval = moment(tick.value);\n\t\t\t\t\t\tcurrMajor = val.get(majorUnit);\n\t\t\t\t\t\ttick.major = currMajor !== lastMajor;\n\t\t\t\t\t\tlastMajor = currMajor;\n\t\t\t\t\t}\n\t\t\t\t\treturn ticks;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n\tconst chartContainer = useRef(null);\n\tconst [chartInstance, setChartInstance] = useState(null)\n\t\n\tuseEffect(() => {\n\t\tif (chartContainer && chartContainer.current) {\n\t\t  const newChartInstance = new Chart(chartContainer.current, chartConfig);\n\t\t  setChartInstance(newChartInstance);\n\t\t}\n\t  }, [chartContainer]);\n\n\t  const updateDataset = (datasetIndex, newData) => {\n\t\tchartInstance.data.datasets[datasetIndex].data = newData;\n\t\tchartInstance.update();\n\t  };\n\t\n\t  const onButtonClick = () => {\n\t\tconst data = [1, 2, 3, 4, 5, 6];\n\t\tupdateDataset(0, data);\n\t  };\n\n\n\nvar barCount = 60;\nvar initialDateStr = '01 Apr 2017 00:00 Z';\n\nvar ctx = document.getElementById('chart').getContext('2d');\nctx.canvas.width = 240;\nctx.canvas.height = 240;\n\nvar getRandomInt = function(max) {\n\treturn Math.floor(Math.random() * Math.floor(max));\t\t\n};\n\nfunction getData(dateStr, count) {\n\tvar dateFormat = 'MMMM DD YYYY';\n\tvar date = moment(`${dateStr}`, dateFormat);\n\tvar data = [randomBar(date, 30)];\t\t\n\twhile (data.length < count) {\t\t\n\t\tdate = date.plus({days: 1});\t\t\n\t\tif (date.weekday <= 5) {\t\t\t\n\t\t\tdata.push(randomBar(date, data[data.length - 1].c));\n\t\t}\t\t\t\n\t}\t\t\n\treturn data;\t\t\n}\t\n\n\nfunction randomNumber(min, max) {\t\n\treturn Math.random() * (max - min) + min;\n}\n\n\nfunction randomBar(date, lastClose) {\n\tvar open = randomNumber(lastClose * 0.95, lastClose * 1.05).toFixed(2);\n\tvar close = randomNumber(open * 0.95, open * 1.05).toFixed(2);\n\tvar high = randomNumber(Math.max(open, close), Math.max(open, close) * 1.1).toFixed(2);\n\tvar low = randomNumber(Math.min(open, close) * 0.9, Math.min(open, close)).toFixed(2);\n\treturn {\n\t\tt: date.valueOf(),\n\t\to: open,\n\t\th: high,\n\t\tl: low,\n\t\tc: close\n\t};\n\n}\n\n\n\n\n\n\n// var update = function() {\n// \tvar dataset = chart.config.data.datasets[0];\n\n// \t// candlestick vs ohlc\n// \tvar type = document.getElementById('type').value;\n// \tdataset.type = type;\n\n// \t// linear vs log\n// \tvar scaleType = document.getElementById('scale-type').value;\n// \tchart.config.options.scales.y.type = scaleType;\n\n// \t// color\n// \tvar colorScheme = document.getElementById('color-scheme').value;\n// \tif (colorScheme === 'neon') {\n// \t\tdataset.color = {\n// \t\t\tup: '#01ff01',\n// \t\t\tdown: '#fe0000',\n// \t\t\tunchanged: '#999',\n// \t\t};\n// \t} else {\n// \t\tdelete dataset.color;\n// \t}\n\n// \t// border\n// \tvar border = document.getElementById('border').value;\n// \tvar defaultOpts = Chart.defaults.elements[type];\n// \tif (border === 'true') {\n// \t\tdataset.borderColor = defaultOpts.borderColor;\n// \t} else {\n// \t\tdataset.borderColor = {\n// \t\t\tup: defaultOpts.color.up,\n// \t\t\tdown: defaultOpts.color.down,\n// \t\t\tunchanged: defaultOpts.color.up\n// \t\t};\n// \t}\n\n// \tchart.update();\n// };\n\n//   update();\n\n//   document.getElementById('randomizeData').addEventListener('click', function() {\n//     chart.data.datasets.forEach(function(dataset) {\n//       dataset.data = getData(initialDateStr, barCount);\n//     });\n//     update();\n//   })\n\n  \n  \n\n\t// const theme = useTheme();\n\nreturn (\n\t<React.Fragment>\n\t\t\n\t{/* {loaded && !error ? <div /> : <b>Something went wrong!</b>} */}\n\n\t<Title>Stocks to watch:</Title>\n\t<div>\n      <canvas ref={chartContainer} />\n    </div>\n\t\n\t</React.Fragment>\n);\n\n};\n\nexport default StockWatch;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\jordo\\\\Google Drive\\\\GitHub\\\\Project-3\\\\StocksN\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jordo\\\\Google Drive\\\\GitHub\\\\Project-3\\\\StocksN\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\jordo\\\\Google Drive\\\\GitHub\\\\Project-3\\\\StocksN\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\jordo\\\\Google Drive\\\\GitHub\\\\Project-3\\\\StocksN\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\jordo\\\\Google Drive\\\\GitHub\\\\Project-3\\\\StocksN\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\jordo\\\\Google Drive\\\\GitHub\\\\Project-3\\\\StocksN\\\\client\\\\src\\\\Components\\\\CandleStick\\\\index.js\";\nimport React, { Component } from 'react';\nimport Chart from 'react-apexcharts';\n\nvar CandleStick = /*#__PURE__*/function (_Component) {\n  _inherits(CandleStick, _Component);\n\n  function CandleStick(props) {\n    var _this;\n\n    _classCallCheck(this, CandleStick);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CandleStick).call(this, props));\n    console.log(props);\n    var XAXISRANGE = 777600000;\n    var TICKINTERVAL = 86400000;\n    _this.state = {\n      series: [{\n        data: props.map(function (data) {\n          console.log(data);\n        })\n      }],\n      options: {\n        chart: {\n          id: 'realtime',\n          height: 240,\n          width: 240,\n          type: 'line',\n          animations: {\n            enabled: true,\n            easing: 'linear',\n            dynamicAnimation: {\n              speed: 1000\n            }\n          },\n          toolbar: {\n            show: false\n          },\n          zoom: {\n            enabled: false\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth'\n        },\n        title: {\n          text: 'Dynamic Updating Chart',\n          align: 'left'\n        },\n        markers: {\n          size: 0\n        },\n        xaxis: {\n          type: 'datetime',\n          range: XAXISRANGE\n        },\n        yaxis: {\n          max: 100\n        },\n        legend: {\n          show: false\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(CandleStick, [{\n    key: \"getNewSeries\",\n    value: function getNewSeries(baseval, yrange) {\n      var newDate = baseval + TICKINTERVAL;\n      lastDate = newDate;\n\n      for (var i = 0; i < data.length - 10; i++) {\n        // IMPORTANT\n        // we reset the x and y of the data which is out of drawing area\n        // to prevent memory leaks\n        data[i].x = newDate - XAXISRANGE - TICKINTERVAL;\n        data[i].y = 0;\n      }\n\n      data.push({\n        x: newDate,\n        y: Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.setInterval(function () {\n        getNewSeries(lastDate, {\n          min: 10,\n          max: 90\n        });\n        ApexCharts.exec('realtime', 'updateSeries', [{\n          data: data\n        }]);\n      }, 1000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Chart, {\n        options: this.state.options,\n        series: this.state.series,\n        type: \"candlestick\",\n        height: \"240\",\n        width: \"240\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 16\n        }\n      });\n    }\n  }]);\n\n  return CandleStick;\n}(Component);\n\nexport default CandleStick;","map":{"version":3,"sources":["C:/Users/jordo/Google Drive/GitHub/Project-3/StocksN/client/src/Components/CandleStick/index.js"],"names":["React","Component","Chart","CandleStick","props","console","log","XAXISRANGE","TICKINTERVAL","state","series","data","map","options","chart","id","height","width","type","animations","enabled","easing","dynamicAnimation","speed","toolbar","show","zoom","dataLabels","stroke","curve","title","text","align","markers","size","xaxis","range","yaxis","max","legend","baseval","yrange","newDate","lastDate","i","length","x","y","push","Math","floor","random","min","window","setInterval","getNewSeries","ApexCharts","exec"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Chart from 'react-apexcharts';\r\n\r\nclass CandleStick extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n            console.log(props)\r\n            let XAXISRANGE = 777600000\r\n            var TICKINTERVAL = 86400000\r\n\r\n        this.state = {\r\n          series: [{\r\n            data: props.map(data => {\r\n                console.log(data)\r\n            })\r\n          }],\r\n          options: {\r\n            chart: {\r\n              id: 'realtime',\r\n              height: 240,\r\n              width: 240,\r\n              type: 'line',\r\n              animations: {\r\n                enabled: true,\r\n                easing: 'linear',\r\n                dynamicAnimation: {\r\n                  speed: 1000\r\n                }\r\n              },\r\n              toolbar: {\r\n                show: false\r\n              },\r\n              zoom: {\r\n                enabled: false\r\n              }\r\n            },\r\n            dataLabels: {\r\n              enabled: false\r\n            },\r\n            stroke: {\r\n              curve: 'smooth'\r\n            },\r\n            title: {\r\n              text: 'Dynamic Updating Chart',\r\n              align: 'left'\r\n            },\r\n            markers: {\r\n              size: 0\r\n            },\r\n            xaxis: {\r\n              type: 'datetime',\r\n              range: XAXISRANGE,\r\n            },\r\n            yaxis: {\r\n              max: 100\r\n            },\r\n            legend: {\r\n              show: false\r\n            },\r\n          },\r\n        \r\n        \r\n        };\r\n        \r\n      }\r\n\r\n    getNewSeries(baseval, yrange) {\r\n        var newDate = baseval + TICKINTERVAL;\r\n        lastDate = newDate\r\n      \r\n        for(var i = 0; i< data.length - 10; i++) {\r\n          // IMPORTANT\r\n          // we reset the x and y of the data which is out of drawing area\r\n          // to prevent memory leaks\r\n          data[i].x = newDate - XAXISRANGE - TICKINTERVAL\r\n          data[i].y = 0\r\n        }\r\n      \r\n        data.push({\r\n          x: newDate,\r\n          y: Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min\r\n        })\r\n      }\r\n\r\n\r\n\r\n      componentDidMount() {\r\n        window.setInterval(() => {\r\n          getNewSeries(lastDate, {\r\n            min: 10,\r\n            max: 90\r\n          })\r\n          \r\n          ApexCharts.exec('realtime', 'updateSeries', [{\r\n            data: data\r\n          }])\r\n        }, 1000)\r\n      }\r\n\r\n    render(){\r\n        return <Chart\r\n        options={this.state.options}\r\n        series={this.state.series}\r\n        type=\"candlestick\"\r\n        height=\"240\"\r\n        width=\"240\"\r\n        />;\r\n    }\r\n}\r\n\r\nexport default CandleStick;"]},"metadata":{},"sourceType":"module"}